Spring Boot Test

Spring 1.3
@RunWith(SpringJUnit4ClassRunner.class)
@ContextConfiguration(classes = {ProductServiceTestConfig.class})

Spring 1.4
MVC Slice: @WebMvcTest
JPA Slice: @DataJpaTest
JSON Slice: @JsonTest

@RunWith(SpringRunner.class)
MockMvc
MockMvcBuilders
standaloneSetup()
webAppContextSetup()
MockMvcRequestBuilders
MockMvcResultHandlers
Mockito
AssertJ
Hamcrest's matchers
We do not use any Tomcat server here while testing, but we can make HTTP requests. How?
Ans: The app runs in a mocked out Spring MVC to handle requests. MockMvc instance makes the requests.


@SpringBootTest
Loads all the @Service, @Repository, @Component, @Controller. It's like running the entire app.
@WebMvcTest & @AutoConfigureMockMvc
Configures only MVC related beans and creates Mocks for @Controllers.